[
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.AdminRightController",
    "Method": "SoftDeleteUser",
    "RelativePath": "api/AdminRight/Deactivating",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "key",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.AdminRightController",
    "Method": "ReactivateUser",
    "RelativePath": "api/AdminRight/reactivate",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "key",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintController",
    "Method": "CreateComplaint",
    "RelativePath": "api/Complaint/FileComplaint",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "OrganizationId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Priority",
        "Type": "ComplaintTicketAPI.Models.Priority",
        "IsRequired": false
      },
      {
        "Name": "status",
        "Type": "ComplaintTicketAPI.Models.Status",
        "IsRequired": false
      },
      {
        "Name": "CommentByUser",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AttachmentUrl",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "AcceptTermsAndConditions",
        "Type": "System.Boolean",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintController",
    "Method": "GenerateComplainReport",
    "RelativePath": "api/Complaint/GenerateComplaintReport",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "OrgId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintController",
    "Method": "GetComplaint",
    "RelativePath": "api/Complaint/GetComplaintById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintController",
    "Method": "TrackComplaintStatus",
    "RelativePath": "api/Complaint/TrackComplaintStatus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "complaintId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintCategoryController",
    "Method": "CreateCategory",
    "RelativePath": "api/ComplaintCategory/CreateCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDto",
        "Type": "ComplaintTicketAPI.Models.DTO.ComplaintCategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ComplaintTicketAPI.Models.DTO.ComplaintCategoryResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ComplaintCategoryController",
    "Method": "GetCategories",
    "RelativePath": "api/ComplaintCategory/GetAllCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pagenum",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pagesize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ComplaintTicketAPI.Models.DTO.ComplaintCategoryResponseDTO, ComplaintTicketAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ForgotPasswordController",
    "Method": "ResetPassword",
    "RelativePath": "api/ForgotPassword/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetRequest",
        "Type": "ComplaintTicketAPI.Models.DTO.ForgotPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ForgotPasswordController",
    "Method": "SendPasswordResetLink",
    "RelativePath": "api/ForgotPassword/send-reset-link",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "usernameorEmail",
        "Type": "ComplaintTicketAPI.Models.DTO.UsernameorEmailDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ForgotPasswordController",
    "Method": "VerifyResetOtp",
    "RelativePath": "api/ForgotPassword/verify-otp",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "otp",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.OrganizationController",
    "Method": "GetAvailablePriorityLevels",
    "RelativePath": "api/Organization/Complaints/AvailablePriorities",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.OrganizationController",
    "Method": "GetAllOrganizations",
    "RelativePath": "api/Organization/Organizations/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.OrganizationController",
    "Method": "GetAvailableOrganizationTypes",
    "RelativePath": "api/Organization/Organizations/AvailableTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.OrganizationController",
    "Method": "GetAvailableRoles",
    "RelativePath": "api/Organization/Roles/Available",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.OrganizationController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Organization/Users/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ProfileController",
    "Method": "GetAllOrgProfiles",
    "RelativePath": "api/Profile/Get-ALl-organizations-profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ProfileController",
    "Method": "GetAllUserProfiles",
    "RelativePath": "api/Profile/Get-ALl-users-profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/Profile/Get-profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ProfileController",
    "Method": "UpdateOrgProfile",
    "RelativePath": "api/Profile/update-Organization-profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ProfilePicture",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "Types",
        "Type": "ComplaintTicketAPI.Models.Type",
        "IsRequired": false
      },
      {
        "Name": "Address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Phone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.ProfileController",
    "Method": "UpdateUserProfile",
    "RelativePath": "api/Profile/update-User-profile",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "FirstName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LastName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ProfilePicture",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "Address",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "DateOfBirth",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Phone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Preferences",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UpdateComplaintController",
    "Method": "GetComplaints",
    "RelativePath": "api/UpdateComplaint/GetComplaints",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orgId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[ComplaintTicketAPI.Models.DTO.ComplaintDataDTO, ComplaintTicketAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UpdateComplaintController",
    "Method": "UpdateComplaintStatus",
    "RelativePath": "api/UpdateComplaint/UpdateComplaintStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateRequest",
        "Type": "ComplaintTicketAPI.Models.DTO.UpdateComplaintRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UserController",
    "Method": "GetUserIdByUsername",
    "RelativePath": "api/User/GetUserIdByUsername",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UserController",
    "Method": "LoginUser",
    "RelativePath": "api/User/LoginOFUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "ComplaintTicketAPI.Models.DTO.LoginRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UserController",
    "Method": "UserRegistration",
    "RelativePath": "api/User/RegistrationOFUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "ComplaintTicketAPI.Models.DTO.RegisterUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UserController",
    "Method": "SendRegistrationOtp",
    "RelativePath": "api/User/send-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "emailDto",
        "Type": "ComplaintTicketAPI.Models.DTO.EmailDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ComplaintTicketAPI.Controllers.UserController",
    "Method": "VerifyRegistrationOtp",
    "RelativePath": "api/User/verify-otp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "otp",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]